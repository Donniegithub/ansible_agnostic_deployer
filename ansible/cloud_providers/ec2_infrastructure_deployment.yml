---
- name: AWS Generate CloudFormation Template
  template:
    src: "{{playbook_dir}}/configs/{{ env_type }}/files/cloud_providers/{{cloud_provider}}_cloud_template.j2"
    dest: "{{playbook_dir}}/workdir/{{cloud_provider}}_cloud_template.{{ env_type }}.{{ guid }}.json"
  tags:
    - aws_infrastructure_deployment
    - gen_cf_template
#- pause:
######################### Launch CF Template

- name: Launch CloudFormation template
  cloudformation:
    stack_name: "{{ project_tag }}"
    state: "present"
    region: "{{ aws_region }}"
    disable_rollback: true
    template: "{{playbook_dir}}/workdir/{{cloud_provider}}_cloud_template.{{ env_type }}.{{ guid }}.json"
    tags:
      Stack: "project {{ project_tag }}"
  tags:
    - aws_infrastructure_deployment
    - provision_cf_template
  register: cloudformation_out

- debug:
   var: cloudformation_out.stack_outputs

- name: Refresh cloud_provider cache
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_access_key_id}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret_access_key}}"
    AWS_DEFAULT_REGION: "{{aws_region}}"
  shell: "{{ playbook_dir }}/inventory/{{ cloud_provider }}.py --refresh-cache"
  when: "not tower_run == 'true'"
  register: task_result
  until: task_result.rc == 0
  retries: 5
  delay: 30
  ignore_errors: yes
  tags:
    - refresh_inventory
    - refresh_inventory_script

- name: Refresh in-memory cloud_provider cache
  meta: refresh_inventory
  tags:
    - refresh_inventory
