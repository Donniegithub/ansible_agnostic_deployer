---
- name: AWS Generate CloudFormation Template
  template:
    src: "{{playbook_dir}}/configs/{{ env_type }}/files/cloud_providers/{{cloud_provider}}_cloud_template.j2"
    dest: "{{playbook_dir}}/workdir/{{cloud_provider}}_cloud_template.{{ env_type }}.{{ guid }}.json"
  tags:
    - aws_infrastructure_deployment
    - gen_cf_template
#- pause:
######################### Launch CF Template

- name: Launch CloudFormation template
  cloudformation:
    stack_name: "{{ project_tag }}"
    state: "present"
    region: "{{ aws_region }}"
    disable_rollback: true
    template: "{{playbook_dir}}/workdir/{{cloud_provider}}_cloud_template.{{ env_type }}.{{ guid }}.json"
    tags:
      Stack: "project {{ project_tag }}"
  tags:
    - aws_infrastructure_deployment
    - provision_cf_template
  register: cloudformation_out

- debug:
   var: cloudformation_out.stack_outputs

# TODO: Since the S3 bucket ID is generated by the CF template, it can be programmatically determined,
# so we really don't need to store its value.
# - name: Store S3 Bucket ID
#   set_fact:
#     s3_bucket: "{{ cloudformation_out.stack_outputs.RegistryS3Output }}"
#   when: 'cloudformation_out.stack_outputs.RegistryS3Output is defined'
# #
# - debug:
#     msg: "bucket is {{ s3_bucket }}"
#   when: 's3_bucket is defined'

# - name: Store internal route53 ID
#   set_fact:
#     internal_zone_id: "{{ cloudformation_out.stack_outputs.Route53internalzoneOutput }}"
#   when: 'cloudformation_out.stack_outputs.Route53internalzoneOutput is defined'

# - name: debug internal dns zone id
#   debug:
#     var: internal_zone_id
#   when: 'internal_zone_id is defined'
